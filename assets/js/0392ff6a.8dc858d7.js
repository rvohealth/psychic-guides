"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[7826],{6972:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=n(4848),o=n(8453);const r={},a="joins",c={id:"models/querying/joins",title:"joins",description:"The joins method enables you to join associations as part of your queries.",source:"@site/docs/models/querying/joins.mdx",sourceDirName:"models/querying",slug:"/models/querying/joins",permalink:"/docs/models/querying/joins",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/models/querying/joins.mdx",tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"first",permalink:"/docs/models/querying/first"},next:{title:"last",permalink:"/docs/models/querying/last"}},i={},l=[];function d(e){const s={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"joins",children:"joins"}),"\n",(0,t.jsx)(s.p,{children:"The joins method enables you to join associations as part of your queries."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"const users = await User.joins('posts', 'comments').all()\n"})}),"\n",(0,t.jsxs)(s.p,{children:["You can also attach ",(0,t.jsx)(s.code,{children:"where"})," clauses to join statements. The second argument (the object) in the following code generates a ",(0,t.jsx)(s.code,{children:"where"})," clause on the ",(0,t.jsx)(s.code,{children:"posts"})," model:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"const users = await User.joins('posts', { category: 'travel' }).all()\n"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"joins"})," actually takes more than 2 arguments. Each argument can either be a model to join on (a string) or a where clause (an object) for the preceeding argument. Consider the following:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"// A where statement on both `posts` and `comments`\nconst users = await User.joins('posts', { category: 'travel' }, 'comments', {\n  flagged: true,\n}).all()\n\n// A where statement on just `comments`\nconst users = await User.joins('posts', 'comments', { flagged: true }).all()\n"})})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>c});var t=n(6540);const o={},r=t.createContext(o);function a(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);