"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[3976],{619:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=t(4848),i=t(8453);const r={sidebar_position:1},a="welcome",o={id:"intro",title:"welcome",description:"Psychic is a node/typescript MVC-based web framework built on top of&nbsp;",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guides",next:{title:"installation",permalink:"/docs/installation"}},c={},d=[];function l(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"welcome",children:"welcome"}),"\n",(0,s.jsxs)(n.p,{children:["Psychic is a node/typescript MVC-based web framework built on top of\xa0\n",(0,s.jsx)(n.a,{href:"https://expressjs.com",children:"expressjs"})," and\n",(0,s.jsx)(n.a,{href:"https://github.com/rvohealth/dream",children:"dream ORM"}),". It provides a light wrapper around\nexpress, gifting you a custom routing mechanism which enables one to compose routes much like\nthey would in Ruby on Rails, Laravel, pheonix, or most other popular MVC-based web frameworks,\nand then uses express to direct the defined routes to controller methods."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// conf/routes.ts\n\nimport { PsychicRouter } from 'psychic'\n\nexport default (r: PsychicRouter) => {\n  r.get('', 'Welcome#index')\n  r.namespace('api', (r) => {\n    r.namespace('v1', (r) => {\n      r.resources('ingredients')\n    })\n  })\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once those routes are defined, we can add a controller to match:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// controllers/Api/V1/IngredientsController.ts\nexport default class ApiV1IngredientsController extends AuthedController {\n  public async create() {\n    const ingredient = await Ingredient.create(this.ingredientParams)\n    this.created(ingredient.id)\n  }\n\n  public async index() {\n    const ingredients = await Ingredient.all()\n    this.ok(ingredients)\n  }\n\n  public async show() {\n    const ingredient = await Ingredient.preload(['nutrition', 'macros']).find(\n      this.castParam('id', 'bigint')\n    )\n    if (!ingredient) return this.notFound()\n\n    this.ok(ingredient)\n  }\n\n  public async update() {\n    const ingredient = await Ingredient.find(this.castParam('id', 'bigint'))\n    if (!ingredient) return this.notFound()\n\n    await ingredient.update(this.ingredientParams)\n    this.noContent()\n  }\n\n  public async destroy() {\n    const ingredient = await Ingredient.find(this.castParam('id', 'bigint'))\n    if (!ingredient) return this.notFound()\n\n    await ingredient.destroy()\n    this.noContent()\n  }\n\n  private get ingredientParams() {\n    return this.paramsFor(Ingredient)\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In addition, Psychic provides a full-force typescript/node/postgres driven ORM that runs on top of\n",(0,s.jsx)(n.a,{href:"https://kysely.dev",children:"Kysely"}),". Modeled after the active record provided by Ruby on Rails, Dream\nprovides a full suite of powerful features with a robust typing system to aid you in your code\njourneys."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Dream, BeforeCreate, BeforeUpdate, Column, Validates, Hash } from 'psychic'\n\nexport default class User extends Dream {\n  public readonly get table() {\n    return 'users' as const\n  }\n\n  public id: number\n  public name: string\n  public createdAt: Date\n  public updatedAt: Date\n\n  @Validates('contains', '@')\n  @Validates('presence')\n  public email: string\n\n  @Validates('length', { min: 4, max: 18 })\n  public passwordDigest: string\n\n  @Virtual()\n  public password?: string | null\n\n  @BeforeCreate()\n  @BeforeUpdate()\n  public async hashPass() {\n    if (this.password) this.passworDigest = await Hash.gen(this.password)\n    this.password = undefined\n  }\n\n  public async checkPassword(password: string) {\n    if (!this.passworDigest) return false\n    return await Hash.check(password, this.passworDigest)\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Psychic also bootstraps your app with a fully functioning repl, as well as bindings to jest which enable you to cover endpoint testing, unit testing, and even feature testing (for those who are using a client integration)."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);