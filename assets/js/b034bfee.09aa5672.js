"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[2842],{7260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var s=n(4848),r=n(8453);const a={sidebar_position:2},c="feature",i={id:"specs/feature",title:"feature",description:"Contrary to unit specs, feature specs will launch your front end and back end servers, driving them with jest-playwright.",source:"@site/docs/specs/feature.mdx",sourceDirName:"specs",slug:"/specs/feature",permalink:"/docs/specs/feature",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/specs/feature.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"guides",previous:{title:"unit",permalink:"/docs/specs/unit"},next:{title:"CalendarDate",permalink:"/docs/data_types_and_helpers/calendar-date"}},o={},u=[];function p(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"feature",children:"feature"}),"\n",(0,s.jsxs)(t.p,{children:["Contrary to unit specs, feature specs will launch your front end and back end servers, driving them with ",(0,s.jsx)(t.a,{href:"https://github.com/playwright-community/jest-playwright",children:"jest-playwright"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"describe('ingredients index page', () => {\n  beforeEach(async () => {\n    await createIngredient({ name: 'Cabbage', ... })\n  })\n\n  it('accepts the request', async () => {\n    await visit('/ingredients')\n    await expectContent('Cabbage')\n  })\n})\n"})}),"\n",(0,s.jsx)(t.p,{children:"Psychic doesn't know much about your UI, so it doesn't provide many feature spec helpers for you out of the box (aside from those provided by playwright directly), but it does include a few in your app when it is first generated:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"\u251c\u2500\u2500 spec\n\u2502   \u251c\u2500\u2500 features\n\u2502   \u2502   \u251c\u2500\u2500 attachFile.ts\n\u2502   \u2502   \u251c\u2500\u2500 clickButton.ts\n\u2502   \u2502   \u251c\u2500\u2500 clickLink.ts\n\u2502   \u2502   \u251c\u2500\u2500 clickSelector.ts\n\u2502   \u2502   \u251c\u2500\u2500 expectContent.ts\n\u2502   \u2502   \u251c\u2500\u2500 expectLink.ts\n\u2502   \u2502   \u251c\u2500\u2500 expectNoContent.ts\n\u2502   \u2502   \u251c\u2500\u2500 expectNoSelector.ts\n\u2502   \u2502   \u251c\u2500\u2500 expectSelector.ts\n\u2502   \u2502   \u251c\u2500\u2500 fillInput.ts\n\u2502   \u2502   \u251c\u2500\u2500 sleep.ts\n\u2502   \u2502   \u251c\u2500\u2500 toggle.ts\n\u2502   \u2502   \u251c\u2500\u2500 uncheck.ts\n\u2502   \u2502   \u251c\u2500\u2500 visit.ts\n"})}),"\n",(0,s.jsx)(t.p,{children:"These helpers are for the most part general purpose, but may need to be tweaked depending on the UI framework you are using."}),"\n",(0,s.jsxs)(t.p,{children:["between each spec run, the database will be truncated to ensure a clean slate. Similar to unit specs, this is set up in the ",(0,s.jsx)(t.code,{children:"spec/features/setup/hooks.ts"})," file:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"// api/spec/features/setup/hooks.ts\n\nimport { truncate } from '@rvohealth/dream/spec-helpers'\n\nbeforeEach(async () => {\n  await truncate()\n})\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var s=n(6540);const r={},a=s.createContext(r);function c(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);