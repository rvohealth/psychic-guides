"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[1423],{8317:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=t(4848),i=t(8453);const a={sidebar_position:6},r="migrations",o={id:"cli/migrations",title:"migrations",description:"Under the hood, Psychic leverages kysely to run our migrations. Whenever a new model is generated, a migration is automatically generated to pair with the model, as we have seen for the User model generated in the authentication example:",source:"@site/docs/cli/migrations.mdx",sourceDirName:"cli",slug:"/cli/migrations",permalink:"/docs/cli/migrations",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/migrations.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"guides",previous:{title:"repl",permalink:"/docs/cli/repl"},next:{title:"querying",permalink:"/docs/db/querying"}},c={},d=[];function l(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"migrations",children:"migrations"}),"\n",(0,s.jsxs)(n.p,{children:["Under the hood, Psychic leverages ",(0,s.jsx)(n.a,{href:"https://kysely.dev",children:"kysely"})," to run our migrations. Whenever a new model is generated, a migration is automatically generated to pair with the model, as we have seen for the User model generated in the authentication example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Kysely, sql } from 'kysely'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function up(db: Kysely<any>): Promise<void> {\n  await db.schema\n    .createType('user_roles_enum')\n    .asEnum([\n      'App',\n      'Admin'\n    ])\n    .execute()\n\n  await db.schema\n    .createTable('users')\n    .addColumn('id', 'bigserial', col => col.primaryKey())\n    .addColumn('email', 'varchar(255)')\n    .addColumn('password_digest', 'varchar(255)')\n    .addColumn('user_role', sql`user_roles_enum`)\n    .addColumn('created_at', 'timestamp', col => col.notNull())\n    .addColumn('updated_at', 'timestamp', col => col.notNull())\n    .execute()\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function down(db: Kysely<any>): Promise<void> {\n  await db.schema.dropTable('users').execute()\n  await db.schema.dropType('user_roles_enum').execute()\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"To run this migration, we can use the migrate cli command, like so:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"NODE_ENV=development yarn psy db:migrate\nNODE_ENV=test yarn psy db:migrate\n"})}),"\n",(0,s.jsx)(n.p,{children:"Along with migrations, Psychic provides additional cli commands for governing migrations:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"NODE_ENV=test yarn psy db:drop\nNODE_ENV=test yarn psy db:create\nNODE_ENV=test yarn psy db:migrate\nNODE_ENV=test yarn psy db:rollback\nNODE_ENV=test yarn psy db:reset # drop, create, migrate\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);