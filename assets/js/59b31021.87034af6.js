"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[5192],{8291:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>u,metadata:()=>i,toc:()=>a});var n=r(4848),t=r(8453),o=r(6592);const u={sidebar_position:2},c="resources",i={id:"routing/resources",title:"resources",description:"You can also use resourceful routing as shorthand to quickly model standard http routes for one of your underlying models, like so:",source:"@site/docs/routing/resources.mdx",sourceDirName:"routing",slug:"/routing/resources",permalink:"/docs/routing/resources",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/routing/resources.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"guides",previous:{title:"crud",permalink:"/docs/routing/crud"},next:{title:"nesting",permalink:"/docs/routing/nesting"}},d={},a=[];function l(e){const s={code:"code",h1:"h1",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"resources",children:"resources"}),"\n",(0,n.jsx)(s.p,{children:"You can also use resourceful routing as shorthand to quickly model standard http routes for one of your underlying models, like so:"}),"\n",(0,n.jsx)(o.A,{children:(0,n.jsx)("pre",{style:{backgroundColor:"transparent"},children:"\nGET     /users      users#index\nPOST    /users      users#create\nGET     /users/:id  users#show\nPUT     /users/:id  users#update\nPATCH   /users/:id  users#update\nDELETE  /users/:id  users#destroy\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:"// conf/routes.ts",children:"import { PsychicRouter } from 'psychic'\n\nexport default (r: PsychicRouter) => {\n  r.resources('user')\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"You can use resourceful routes, but restrict the routes to only a collection, like so:"}),"\n",(0,n.jsx)(o.A,{children:(0,n.jsx)("pre",{style:{backgroundColor:"transparent"},children:"\nGET     /users  users#index\nPOST    /users  users#create\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"// conf/routes.ts\n\nimport { PsychicRouter } from 'psychic'\n\nexport default (r: PsychicRouter) => {\n  r.resources('user', { only: ['create', 'index'] })\n  // same as:\n  r.resources('user', { except: ['show', 'update', 'destroy'] })\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"Additionally, use the resource method to do the same, but with a singularized route endpoint. This is generally done when you do not need to pass an id to identify the resource, such as when the resource will always belong to the authenticated user."}),"\n",(0,n.jsx)(o.A,{children:(0,n.jsx)("pre",{style:{backgroundColor:"transparent"},children:"\nGET     /users  users#index\nPOST    /users  users#create\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"// conf/routes.ts\n\nimport { PsychicRouter } from 'psychic'\n\nexport default (r: PsychicRouter) => {\n  r.resource('user')\n}\n"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},6592:(e,s,r)=>{r.d(s,{A:()=>t});var n=r(4848);function t(e){let{children:s}=e;return(0,n.jsx)("div",{className:"right-sidebar-item",children:s})}},8453:(e,s,r)=>{r.d(s,{R:()=>u,x:()=>c});var n=r(6540);const t={},o=n.createContext(t);function u(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:u(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);