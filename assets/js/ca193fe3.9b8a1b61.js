"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[5078],{5291:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var n=t(4848),r=t(8453);t(6592);const d={sidebar_position:1},s="CalendarDate",o={id:"data_types_and_helpers/calendar-date",title:"CalendarDate",description:"Date fields in the database are returned as CalendarDate objects. CalendarDate provides a clean way to deal with dates without worrying about timezone math (though several methods accept an optional zone option when setting the CalendarDate). The name CalendarDate was chosen because Date was already taken by Javascript's time class, and we wanted to emphasize that this class deals with days as the fundamental unit of time.",source:"@site/docs/data_types_and_helpers/calendar-date.mdx",sourceDirName:"data_types_and_helpers",slug:"/data_types_and_helpers/calendar-date",permalink:"/docs/data_types_and_helpers/calendar-date",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data_types_and_helpers/calendar-date.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guides",previous:{title:"feature",permalink:"/docs/specs/feature"},next:{title:"DateTime",permalink:"/docs/data_types_and_helpers/date-time"}},l={},c=[{value:"Creating a CalendarDate",id:"creating-a-calendardate",level:2},{value:"Converting from a CalendarDate",id:"converting-from-a-calendardate",level:2},{value:"Date math",id:"date-math",level:2}];function i(a){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"calendardate",children:"CalendarDate"}),"\n",(0,n.jsxs)(e.p,{children:["Date fields in the database are returned as CalendarDate objects. CalendarDate provides a clean way to deal with dates without worrying about timezone math (though several methods accept an optional ",(0,n.jsx)(e.code,{children:"zone"})," option when setting the CalendarDate). The name CalendarDate was chosen because Date was already taken by Javascript's time class, and we wanted to emphasize that this class deals with days as the fundamental unit of time."]}),"\n",(0,n.jsx)(e.h2,{id:"creating-a-calendardate",children:"Creating a CalendarDate"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-typescript",children:"import { CalendarDate } from '@rvohealth/dream'\n\n// relative to today\nCalendarDate.today()\nCalendarDate.today({ zone: 'America/Chicago' })\nCalendarDate.tomorrow()\nCalendarDate.yesterday()\n\n// from an ISO string\nCalendarDate.fromISO('2024-03-02')\nCalendarDate.fromISO('2024-05-05T22:43:36.032-05:00')\nCalendarDate.fromISO('2024-05-05T22:43:36.032-08:00', {\n  zone: 'America/Chicago',\n})\n\n// from an object\nCalendarDate.fromObject({ year: 2023, month: 6, day: 16 })\n\n// from a Luxon DateTime\nconst dateTime = DateTime.fromISO('2024-05-05T17:53:07.397Z')\nCalendarDate.fromDateTime(dateTime)\n\n// check validity of the CalendarDate\nconst calendarDate = CalendarDate.fromISO('2023-02-29')\ncalendarDate.isValid // false\n"})}),"\n",(0,n.jsx)(e.h2,{id:"converting-from-a-calendardate",children:"Converting from a CalendarDate"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-typescript",children:"const calendarDate = CalendarDate.fromISO('2024-03-02')\n\n// to a string\ncalendarDate.toISO() // '2024-03-02'\ncalendarDate.toISODate() // '2024-03-02'\ncalendarDate.toJSON() // '2024-03-02'\ncalendarDate.toString() // '2024-03-02'\ncalendarDate.toLocaleString({ month: 'short', day: 'numeric' }) // 'Mar 2'\n\n// to a Luxon DateTime\ncalendarDate.toDateTime()\n\n// to a Javascript Date\ncalendarDate.toJSDate()\n\n// year/month/day parts\ncalendarDate.year\ncalendarDate.month\ncalendarDate.day\n"})}),"\n",(0,n.jsx)(e.h2,{id:"date-math",children:"Date math"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-typescript",children:"const calendarDate = CalendarDate.fromISO('2024-03-02')\nconst otherCalendarDate = CalendarDate.fromISO('2024-02-27')\n\ncalendarDate.plus({ days: 4 })\ncalendarDate.minus({ days: 4 })\n\nCalendarDate.max(calendarDate, otherCalendarDate)\nCalendarDate.min(calendarDate, otherCalendarDate)\n\ncalendarDate.diff(otherCalendarDate, 'days') // 4\notherCalendarDate.diff(calendarDate, 'days') // -4\ncalendarDate.diffNow('days')\n\ncalendarDate > otherCalendarDate // true\ncalendarDate < otherCalendarDate // false\ncalendarDate.equals(otherCalendarDate) // false\n"})})]})}function h(a={}){const{wrapper:e}={...(0,r.R)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(i,{...a})}):i(a)}},6592:(a,e,t)=>{t.d(e,{A:()=>r});var n=t(4848);function r(a){let{children:e}=a;return(0,n.jsx)("div",{className:"right-sidebar-item",children:e})}},8453:(a,e,t)=>{t.d(e,{R:()=>s,x:()=>o});var n=t(6540);const r={},d=n.createContext(r);function s(a){const e=n.useContext(d);return n.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function o(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(r):a.components||r:s(a.components),n.createElement(d.Provider,{value:e},a.children)}}}]);