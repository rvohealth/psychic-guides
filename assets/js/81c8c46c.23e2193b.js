"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[4315],{5388:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=s(4848),o=s(8453);s(6592);const r={sidebar_position:3},i="response",c={id:"controllers/response",title:"response",description:"magic response codes",source:"@site/docs/controllers/response.mdx",sourceDirName:"controllers",slug:"/controllers/response",permalink:"/docs/controllers/response",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/controllers/response.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guides",previous:{title:"request",permalink:"/docs/controllers/request"},next:{title:"overview",permalink:"/docs/models/"}},a={},l=[{value:"magic response codes",id:"magic-response-codes",level:2},{value:"automatic serialization",id:"automatic-serialization",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"response",children:"response"}),"\n",(0,t.jsx)(n.h2,{id:"magic-response-codes",children:"magic response codes"}),"\n",(0,t.jsx)(n.p,{children:"Psychic comes with many convenience methods shadowing standard http response codes, enabling your code to stay expressive:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { PsychicController, Params } from 'psychic'\n\nexport default class HowyadoinsController extends PsychicController {\n  public async create() {\n    ...\n    this.created()\n  }\n\n  public async index() {\n    ...\n    this.ok(things)\n  }\n\n  public async update() {\n    ...\n    this.noContent()\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"automatic-serialization",children:"automatic serialization"}),"\n",(0,t.jsx)(n.p,{children:"Whenever rendering a dream instance, Psychic will always be smart enough to leverage the provided serializer, making these two lines equivilent:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"export default class HowyadoinsController extends PsychicController {\n  public async index() {\n    ...\n    this.ok(things)\n    this.ok(things.map(thing => new ThingSerializer(thing).render()))\n  }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},6592:(e,n,s)=>{s.d(n,{A:()=>o});var t=s(4848);function o(e){let{children:n}=e;return(0,t.jsx)("div",{className:"right-sidebar-item",children:n})}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(6540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);