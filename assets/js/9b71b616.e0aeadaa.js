"use strict";(self.webpackChunkpsychic_guides=self.webpackChunkpsychic_guides||[]).push([[3679],{8905:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var s=t(4848),o=t(8453),r=t(1470),a=t(9365);const l={sidebar_position:1},i="belongs to",u={id:"models/associations/belongs-to",title:"belongs to",description:"Belongs to associations are to be used when the model in question is related to another model, and contains a foreign key to that model within its table. An example of a belongs to would be in the case of a User and Post model, where a User can write many Posts, and each Post would contain a field (called a foreign key) which points back to the id field of a User who owns it. In this context, we would say that the Post belongs to the User.",source:"@site/docs/models/associations/belongs-to.mdx",sourceDirName:"models/associations",slug:"/models/associations/belongs-to",permalink:"/docs/models/associations/belongs-to",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/models/associations/belongs-to.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guides",previous:{title:"overview",permalink:"/docs/models/associations/overview"},next:{title:"overview",permalink:"/docs/models/associations/options/overview"}},c={},d=[];function h(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"belongs-to",children:"belongs to"}),"\n",(0,s.jsxs)(n.p,{children:["Belongs to associations are to be used when the model in question is related to another model, and contains a foreign key to that model within its table. An example of a belongs to would be in the case of a ",(0,s.jsx)(n.code,{children:"User"})," and ",(0,s.jsx)(n.code,{children:"Post"})," model, where a ",(0,s.jsx)(n.code,{children:"User"})," can write many ",(0,s.jsx)(n.code,{children:"Post"}),"s, and each ",(0,s.jsx)(n.code,{children:"Post"})," would contain a field (called a foreign key) which points back to the id field of a ",(0,s.jsx)(n.code,{children:"User"})," who owns it. In this context, we would say that the ",(0,s.jsx)(n.code,{children:"Post"})," belongs to the ",(0,s.jsx)(n.code,{children:"User"}),"."]}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(a.A,{value:"basic",label:"basic",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default class Post extends Dream {\n  public readonly get table() {\n    return 'posts' as const\n  }\n\n  public id: number\n  public content: string | null\n\n  @BelongsTo(() => User)\n  public user: User\n  public userId: number\n}\n"})})}),(0,s.jsxs)(a.A,{value:"optional",label:"optional",default:!0,children:[(0,s.jsxs)(n.p,{children:["BelongsTo associations are required by default (and should have a corresponding\nnot-null declaration on the foreign key column). To make an association optional,\npass the ",(0,s.jsx)(n.code,{children:"optional: true"})," option (and ensure that the column allows null values)."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default class Post extends Dream {\n  public readonly get table() {\n    return 'posts' as const\n  }\n\n  public id: number\n  public content: string | null\n\n  @BelongsTo(() => User, { optional: true })\n  public user: User\n  public userId: number\n}\n"})})]}),(0,s.jsxs)(a.A,{value:"foreign-key",label:"foreign key",children:[(0,s.jsxs)(n.p,{children:["By default, the foreign key is derived from the association name. E.g., in the example below, the\ndefault foreign key would be ",(0,s.jsx)(n.code,{children:"userId"}),". This can be overridden by including an explicit\n",(0,s.jsx)(n.code,{children:"foreignKey: '<camelized-column-name-on-this-table>'"})," option."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default class Post extends Dream {\n  public readonly get table() {\n    return 'posts' as const\n  }\n\n  public id: number\n  public content: string | null\n\n  @BelongsTo(() => User, { foreignKey: 'myUserId' })\n  public user: User\n  public myUserId: number\n}\n"})})]}),(0,s.jsxs)(a.A,{value:"primary-key-override",label:"primary key override",children:[(0,s.jsxs)(n.p,{children:["By default, the column that the foreign key points to is returned by the ",(0,s.jsx)(n.code,{children:"primaryKey"})," getter\n(and defaults to ",(0,s.jsx)(n.code,{children:"id"}),"). For associations that point to something other than the primary key,\nthis can be overridden by passing the ",(0,s.jsx)(n.code,{children:"primaryKeyOverride: '<column-name-on-target-table>'"})," option."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default class Post extends Dream {\n  public readonly get table() {\n    return 'posts' as const\n  }\n\n  public id: number\n  public content: string | null\n\n  @BelongsTo(() => User, { primaryKeyOverride: 'uuid' })\n  public user: User\n  public userId: number\n}\n"})})]})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var s=t(4164);const o={tabItem:"tabItem_Ymn6"};var r=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(o.tabItem,a),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>j});var s=t(6540),o=t(4164),r=t(3104),a=t(6347),l=t(205),i=t(7485),u=t(1682),c=t(679);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:o}}=e;return{value:n,label:t,attributes:s,default:o}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:t}=e;const o=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,r=h(e),[a,i]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[u,d]=b({queryString:t,groupId:o}),[m,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,c.Dv)(t);return[o,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:o}),g=(()=>{const e=u??m;return p({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{g&&i(g)}),[g]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),f(e)}),[d,f,r]),tabValues:r}}var f=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function v(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=i.indexOf(n),o=l[t].value;o!==s&&(u(n),a(o))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>i.push(e),onKeyDown:d,onClick:c,...r,className:(0,o.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:o}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===o));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function w(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(y,{...n,...e})]})}function j(e){const n=(0,f.A)();return(0,x.jsx)(w,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);